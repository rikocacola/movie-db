{"version":3,"sources":["components/modal/modal-component.jsx","components/cards/cards.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["ModalComponent","show","handleClose","detailMovie","Modal","onHide","size","Header","closeButton","Title","Year","Body","Row","Col","sm","src","Poster","alt","className","ListGroup","style","marginTop","Item","Rated","Genre","imdbRating","Metascore","Director","Actors","Writer","Plot","Footer","Button","variant","onClick","Cards","props","handleShow","imdbid","axios","get","then","response","setState","data","console","log","Ratings","setShow","state","movie","this","Card","width","Img","Subtitle","imdbID","React","Component","CardList","movies","undefined","map","md","SearchBox","placeholder","handleChange","value","handleSubmit","onSubmit","type","name","onChange","App","e","searchField","target","preventDefault","Search","catch","error","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a26c22bc.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Modal, Row, Col, ListGroup } from 'react-bootstrap';\n\nexport const ModalComponent = ({ show, handleClose, detailMovie }) => {\n    return (\n        <div>\n            <Modal show={show} onHide={handleClose} size='lg'>\n                <Modal.Header closeButton>\n                    <Modal.Title>{detailMovie.Title} ({detailMovie.Year})</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Row>\n                        <Col sm={4}>\n                            <img src={detailMovie.Poster} alt='Poster Movie' className='img-fluid' />\n                            <ListGroup style={{ marginTop: '10px' }}>\n                                <ListGroup.Item>\n                                    <Row><strong>{detailMovie.Rated}</strong></Row>\n                                    <Row><span>{detailMovie.Genre}</span></Row>\n                                    {/* {detailMovie.Ratings[0]?.Value} */}\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    <Row>\n                                        <strong>Rating</strong>\n                                    </Row>\n                                    <Row>\n                                        <strong>IMDB: </strong> {detailMovie.imdbRating}/10.0\n                                    </Row>\n                                    <Row>\n                                        <strong>Metascore: </strong> {detailMovie.Metascore}/100\n                                    </Row>\n                                </ListGroup.Item>\n                            </ListGroup>\n                        </Col>\n                        <Col sm={8}>\n                            <ListGroup>\n                                <ListGroup.Item><strong>Director: </strong>{detailMovie.Director}</ListGroup.Item>\n                                <ListGroup.Item><strong>Actors: </strong>{detailMovie.Actors}</ListGroup.Item>\n                                <ListGroup.Item><strong>Writer: </strong>{detailMovie.Writer}</ListGroup.Item>\n                                <ListGroup.Item><strong>Plot: </strong><br />{detailMovie.Plot}</ListGroup.Item>\n                            </ListGroup>\n                        </Col>\n                    </Row>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={handleClose}>\n                        Save Changes\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    )\n}","import React from 'react';\nimport axios from 'axios';\n\nimport { Button, Card } from 'react-bootstrap';\n\nimport { ModalComponent } from '../modal/modal-component';\n\nclass Cards extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            show: false,\n            setShow: false,\n            detailMovie: []\n        }\n    }\n\n    handleShow = (imdbid) => {\n        axios.get(`http://www.omdbapi.com/?apikey=bd9f9eb5&i=${imdbid}`)\n            .then(response => this.setState({ detailMovie: response.data }, () => console.log(response.data.Ratings)));\n        this.setState({ setShow: true, show: true })\n    }\n\n    handleClose = () => {\n        this.setState({ setShow: false, show: false })\n    }\n\n    render() {\n        const { movie } = this.props;\n        const { detailMovie } = this.state;\n        return (\n            <div>\n                <Card style={{ width: '21rem' }}>\n                    <Card.Img variant=\"top\" src={movie.Poster} />\n                    <Card.Body>\n                        <Card.Title>{movie.Title}</Card.Title>\n                        <Card.Subtitle className=\"mb-2 text-muted\">{movie.Year}</Card.Subtitle>\n                        <Button variant=\"primary\" onClick={() => this.handleShow(movie.imdbID)}>Show Detail</Button>\n                    </Card.Body>\n                </Card>\n\n\n                <ModalComponent show={this.state.show} handleClose={this.handleClose} detailMovie={detailMovie} />\n            </div>\n        )\n    }\n}\n\nexport default Cards;\n","import { Col, Row } from 'react-bootstrap';\n\nimport Cards from '../cards/cards.component';\n\nexport const CardList = ({ movies }) => (\n    <div>\n        <Row>\n            {movies === undefined\n                ? ''\n                :\n                movies.map(movie => <Col md={4} key={movie.imdbID}><Cards movie={movie} /></Col>)\n            }\n\n        </Row>\n    </div>\n)\n","import React from 'react';\n\nimport './search-box.style.css'\n\nexport const SearchBox = ({ placeholder, handleChange, value, handleSubmit }) => {\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <input\n                    placeholder={placeholder}\n                    type='search'\n                    name='search'\n                    onChange={handleChange}\n                    value={value}\n                />\n                <input type=\"submit\" value=\"Submit\" />\n            </form>\n        </div>\n    )\n}","import React from 'react';\nimport axios from 'axios';\n\nimport './App.css';\n\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component'\n// import { ChildComponent } from './components/child-component/child-component';\n\nimport { Container } from 'react-bootstrap';\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      movies: [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount() {\n    axios.get(`http://www.omdbapi.com/?apikey=bd9f9eb5&s=$avengers`)\n      .then(response => this.setState({ movies: response.data.Search }))\n      .catch(error => console.error(error))\n  }\n\n  handleChange = e => {\n    this.setState({ searchField: e.target.value })\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    axios.get(`http://www.omdbapi.com/?apikey=bd9f9eb5&s=${this.state.searchField}`)\n      .then(response => this.setState({ movies: response.data.Search }, () => console.log(response.data.Search)))\n      .catch(error => console.error(error))\n  }\n\n  render() {\n    const { movies } = this.state;\n    return (\n      <div className='App'>\n        <Container>\n          <h1>Movie DB</h1>\n          <SearchBox placeholder='Search Movie' handleChange={this.handleChange} value={this.state.searchField} handleSubmit={this.handleSubmit} />\n          <CardList movies={movies} />\n        </Container>\n      </div>\n    )\n  }\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}